local Config = {
    WindowName = "Fikury HUB | Shindo Life",
	Color = Color3.fromRGB(0,255,255),
	Keybind = Enum.KeyCode.RightShift
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
game:GetService("RunService").Stepped:connect(
    function()
        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 1000)
    end
)

if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main") then
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main") 
end
if game.Players.LocalPlayer.Character then
repeat wait() until game.Players.LocalPlayer.Character
end
local Name = "Shindo.txt"

Des = {}
if makefolder then
    makefolder("V.G Hub")
end

local Settings

if
    not pcall(
        function()
            readfile("V.G Hub//" .. Name)
        end
    )
 then
    writefile("V.G Hub//" .. Name, game:service "HttpService":JSONEncode(Des))
end

Settings = game:service "HttpService":JSONDecode(readfile("V.G Hub//" .. Name))

local function Save()
    writefile("V.G Hub//" .. Name, game:service "HttpService":JSONEncode(Settings))
end

game:GetService("UserInputService").MouseIconEnabled = true
game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
game:GetService("RunService").Stepped:connect(function()
        pcall(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BillboardGui") then
                        v:remove()
                    end
                end
            end
        )
        pcall(function()
        if game:GetService("Workspace"):FindFirstChild("CCoff") then
            game:GetService("Workspace").CCoff:Destroy()
        end
        if game:GetService("Workspace"):FindFirstChild("custo") then
            game:GetService("Workspace").custo:Destroy()
        end
        if game:GetService("Workspace"):FindFirstChild("custo") then
            game:GetService("Workspace").custo:Destroy()
        end
        if game:GetService("Workspace"):FindFirstChild("conquer") then
            game:GetService("Workspace").conquer:remove()
        end
        if game:GetService("Workspace").GLOBALTIME:FindFirstChild("narutoshadowclone") then
            game:GetService("Workspace").GLOBALTIME:WaitForChild("narutoshadowclone"):remove()
        end
        end)
    end
) 
pcall(function()
Dungon = {}
for i=1,15 do 
table.insert(Dungon,"dungeon"..i)
end 
end)
local player = game.Players.LocalPlayer


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/test"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))
local Tab1 = Window:CreateTab("Main")
local Tab2 = Window:CreateTab("UI Settings")
local Tab3 = Window:CreateTab("Lobby")

local Section1 = Tab1:CreateSection("Farm Section")
local Section2 = Tab1:CreateSection("Upgrade Section")
local Section3 = Tab3:CreateSection("Skill Section")
local Section4 = Tab3:CreateSection("Bloodline Section")
local SectionA = Tab1:CreateSection("")
local Section7 = Tab1:CreateSection("Player Section")
local Section5 = Tab2:CreateSection("Menu")
local Section6 = Tab2:CreateSection("Background")


if game.PlaceId == 7524809704 then
local Toggle1 = Section1:CreateToggle("AutoStart Dungeon", Settings.Dungeon1, function(State)
Settings.Dungeon1 = State
spawn(
    function()
        while wait() and Settings.Dungeon1 do
            game:GetService("Players").LocalPlayer.pressplay:FireServer(Dungon)
        end
    end
)
end)

local Dropdown1 = Section1:CreateDropdown("Dungeons", Dungon, function(String)
	Settings.Dungeon = String
	Dungon = Settings.Dungeon
end)

end

local Toggle1 = Section1:CreateToggle("AutoFarm Logs", Settings.Logs, function(State)
Settings.Logs = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Logs then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)

spawn(function()
while Settings.Logs do
    wait()
    pcall(
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            game:GetService("Workspace").npc.logtraining.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
        end
    )
end
end)
end)



--[[
local Toggle1 = Section1:CreateToggle("AutoFarm Candy", nil, function(State)
getgenv().AutoCandy = State
game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().AutoCandy then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
while getgenv().AutoCandy do
    wait()
    pcall(
        function()
            repeat
                wait(0.5)
                for i, v in pairs(game:GetService("Workspace").game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory")givers:GetDescendants()) do
                    if
                        v:FindFirstChild("Head") and v.Head:FindFirstChild("givemission") and v.Head.givemission.Enabled and
                            v.Head.givemission:FindFirstChild("color").Image == "rbxassetid://7852180920"
                     then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                                v:FindFirstChild("CLIENTTALK"):FireServer()
                                v:FindFirstChild("CLIENTTALK"):FireServer("accept")
                            end
                        )
                    end
                end
            until getgenv().AutoCandy == false
        end
    )
end
end)]]--


if game.PlaceId ~= 7524809704 then
local Toggle1 = Section1:CreateToggle("Event Bosses", Settings.EventBosses, function(State)
Settings.EventBosses = State

game:GetService("RunService").Stepped:connect(
    function()
        if Settings.EventBosses then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(function()
while wait() and Settings.EventBosses do
    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
        if v.Name == "npc1" then
            repeat
                wait()
                pcall(
                    function()
                        game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                        game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                        game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                        end
                )
            until v.Humanoid.Health == 0 or not v or not Settings.EventBosses
        end
    end
end
end)
end)

local Toggle1 = Section1:CreateToggle("AutoFarm Mobs", Settings.AutoMobs, function(State)
Settings.AutoMobs = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.AutoMobs then pcall(function()
            j = string.split(game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").bg.name.Text, "(s)")[1]

            game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").bg.name.Text =
                string.gsub(j, tostring((s)), "")

            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
            end)
        end
    end
)
spawn(function()
while Settings.AutoMobs do
    wait()
    pcall(
        function()
            repeat
                wait()
                for i, v in pairs(game:GetService("Workspace").missiongivers:GetChildren()) do
                    if
                        v:FindFirstChild("Head") and v.Head:FindFirstChild("givemission") and v.Head.givemission.Enabled and
                            v.Head.givemission:FindFirstChild("color").Image ==
                                "http://www.roblox.com/asset/?id=5459241648"
                     then
                        if game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == false then 
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                        wait(0.3)
                                    v:FindFirstChild("CLIENTTALK"):FireServer()
                                    v:FindFirstChild("CLIENTTALK"):FireServer("accept") wait(0.5)
                                end
                            )
                        end
                    end
                end
            until Settings.AutoMobs == false or game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == true
            repeat
                wait()
                if game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == true then
                    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
                        if v:FindFirstChild("npctype") then
                          print("Hi")
                        end
                        if 
                            v.ClassName == "Model" and v:FindFirstChild("npctype") and
                                string.find(game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").bg.name.Text, v.Head.mob.fram.name.info.Text) and
                                v:FindFirstChild("HumanoidRootPart") and
                                v:FindFirstChild("Humanoid") and
                                v.Head.CFrame.Y > -1000
                         then
                            pcall(
                                function() wait(0.2)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                    if v:FindFirstChild("antiexploit") then
                                        v.antiexploit:remove()
                                    end
                                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                                    v.Humanoid.Health = 0
                                    end 
                                end
                            )
                        end
                    end
                end
               
            until Settings.AutoMobs == false or game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == false and v.Humanoid.Health == 0 and v
        end
    )
end
end)
end)




local Toggle1 = Section1:CreateToggle("AutoFarm Dungeon", Settings.Hope, function(State)
Settings.Hope = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Hope then pcall(function()
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
            end)
        end
    end
)
spawn(function()
while Settings.Hope do
    wait()
    pcall(
        function()

            repeat
                wait()
                    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
                        if v:FindFirstChild("npctype") then
                          print("Hi")
                        end
                        if 
                            v.ClassName == "Model" and v:FindFirstChild("npctype")  and
                                v:FindFirstChild("HumanoidRootPart") and
                                v:FindFirstChild("Humanoid") and
                                v.Head.CFrame.Y > -1000
                         then
                            pcall(
                                function() 
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                    if v:FindFirstChild("antiexploit") then
                                        v.antiexploit:remove()
                                    end
                                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                                    v.Humanoid.Health = 0
                                    end 
                                end
                            )

                    end
                end
               
            until Settings.Hope == false or v.Humanoid.Health == 0 and v
        end
    )
end
end)
end)

local Toggle1 = Section1:CreateToggle("AutoFarm Boss", Settings.Bosses, function(State)
Settings.Bosses = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Bosses then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(function()
while Settings.Bosses do
    pcall(
        function()
            wait()
            repeat
                wait()
                for i, v in pairs(game:GetService("Workspace").bossdropmission.missions:GetChildren()) do
                    for i, v in pairs(v:GetChildren()) do
                        if v:IsA("Model") and v:FindFirstChild("Head") then
                            if game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == false then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                wait(0.3)
                                v:FindFirstChild("CLIENTTALK"):FireServer()
                                v:FindFirstChild("CLIENTTALK"):FireServer("accept")
                                wait(0.5)
                            end
                        end
                    end
                end
            until Settings.Bosses == false or game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == true
            repeat
                wait()
                for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
                    if
                        v.ClassName == "Model" and v:FindFirstChild("npctype") and
                            string.find(game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").bg.name.Text, v.Head.mob.fram.name.info.Text)
                     then
                        if game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == true then 
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                            if v:FindFirstChild("antiexploit") then
                            v.antiexploit:remove()
                            end
                            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                            if v.Humanoid.Health < v.Humanoid.MaxHealth and isnetworkowner(v.HumanoidRootPart) then
                                v.Humanoid.Health = 0
                            end
                        end
                    end
                end
            until Settings.Bosses == false or game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").Visible == false and v.Humanoid.Health == 0 and v
        end
    )
end
end)

end)
if setclipboard then
local Button1 = Section1:CreateButton("Copy Vip Server Codes", function()
setclipboard("-E0BJK 0Skr9C 1Isuub 2tgOb8 2vy3Dn 7rTU-A 7v09lz 8CGAZH BcBuAN CI98Au Do2o8A JFDOST KFXSrq QeR2eN Qratoy RRu4E7 Rjb0rQ SbFkZm TVDDoU WY4chE _5_oXy cJ7LIe cdv9R4 dBNARC dG5Y-3 fLe-Az hnI8qv nWv2xH puv68h sCCXqk tkqyBR v5-9u3 w1wF1v zfU90r")
end)
end
local Toggle1 = Section1:CreateToggle("AutoRank", Settings.Rebirth, function(State)
Settings.Rebirth = State
spawn(function()
while wait() and Settings.Rebirth do
    if game.Players.LocalPlayer.statz.lvl:FindFirstChild("lvl").Value >= 500 then
        if
            game.Players.LocalPlayer.statz.prestige.maxlvlpres.Value >= 1 or
                game.Players.LocalPlayer.statz.prestige.maxlvlpres.Value == 0 and
                    game.Players.LocalPlayer.statz.prestige.rank.Value == "Z" and
                    game.Players.LocalPlayer.statz.prestige.number.Value == "3"
         then
            repeat
                wait(0.5)
                game.Players.LocalPlayer.startevent:FireServer("maxlvlpres")
            until game.Players.LocalPlayer.statz.lvl:FindFirstChild("lvl").Value == 1 or not Settings.Rebirth
        else
            repeat
                wait(0.5)
                game.Players.LocalPlayer.startevent:FireServer("rankup")
            until game.Players.LocalPlayer.statz.lvl:FindFirstChild("lvl").Value == 1 or not Settings.Rebirth
        end
    end
end
end)
end)
local Toggle1 = Section1:CreateToggle("jinfarm", Settings.Jin, function(State)
Settings.Jin = State

game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Jin then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(function()
while wait() and Settings.Jin do
    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
        if v.Name == "npc1" then
            repeat
                wait()
                pcall(
                    function()
                        game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                            v.HumanoidRootPart.CFrame * CFrame.new(0, -7, 0)
                            game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                            game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                         if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                            v.Humanoid.Health = 0
                        end 
                    end
                )
            until v.Humanoid.Health == 0 or not v or not Settings.Jin
        end
    end
end
end)
end)
local Toggle1 = Section1:CreateToggle("AutoWar", Settings.War, function(State)
Settings.War = State

game:GetService("RunService").Stepped:connect(
    function()
        if Settings.War then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)

spawn(function()
while Settings.War do
    wait()
    pcall(
        function()
            for i, v in pairs(workspace.npc:GetChildren()) do
                if
                    v.ClassName == "Model" and v:FindFirstChild("npc") and string.find(v.Name, "npc") and
                        v:FindFirstChild("HumanoidRootPart") and
                        v:FindFirstChild("Humanoid") and
                        v.Head.CFrame.Y > -1000 and
                        not v:FindFirstChild("megaboss")
                 then
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                        v.Humanoid.Health = 0
                    end
                elseif
                    v.ClassName == "Model" and v:FindFirstChild("npc") and string.find(v.Name, "npc") and
                        v:FindFirstChild("HumanoidRootPart") and
                        v:FindFirstChild("Humanoid") and
                        v.Head.CFrame.Y > -1000 and
                        v:FindFirstChild("megaboss")
                 then
                    wait(6)
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                        v.Humanoid.Health = 0
                    end
                end
            end
        end
    )
end

end)
end)

local Toggle1 = Section1:CreateToggle("ScrollFarm", Settings.Scroll, function(State)
Settings.Scroll = State
spawn(function()
while Settings.Scroll do
    wait()
    pcall(
        function()
            for i, v in pairs(game.workspace.GLOBALTIME:GetChildren()) do
                if
                    v.ClassName == "Model" and v:FindFirstChild("sh") and v.sh.Position.Y > -1000 and
                        v.sh.Position.Y < 2000
                 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.sh.CFrame
                    fireclickdetector(v.sh.ClickDetector)
                end
            end
            for i, v in pairs(game.workspace:GetChildren()) do
                if
                    v.ClassName == "Model" and v:FindFirstChild("sh") and v.sh.Position.Y > -1000 and
                        v.sh.Position.Y < 2000
                 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.sh.CFrame
                    fireclickdetector(v.sh.ClickDetector)
                end
            end
        end
    )
end
end)
end)

local Toggle1 = Section2:CreateToggle("Auto Upgrade Health", Settings.Health, function(State)
Settings.Health = State
spawn(function()
while Settings.Health do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "health", 5)
end
end)
end)
local Toggle1 = Section2:CreateToggle("Auto Upgrade Ninjutsu", Settings.Ninjutsu, function(State)
Settings.Ninjutsu = State
spawn(function()
while Settings.Ninjutsu do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "ninjutsu", 5)
end
end)
end)


local Toggle1 = Section2:CreateToggle("Auto Upgrade Taijutsu", Settings.Taijutsu, function(State)
Settings.Taijutsu = State
spawn(function()
while Settings.Taijutsu do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "taijutsu", 5)
end
end)
end)
local Toggle1 = Section2:CreateToggle("Auto Upgrade Chakra", Settings.Chakra, function(State)
Settings.Chakra = State
spawn(function()
while Settings.Chakra do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "chakra", 5)
end
end)
end)

end -- where it stops

if game.PlaceId == 4616652839 then

local Toggle1 = Section3:CreateToggle("Auto Element Slot 1", Settings.Element1, function(State)
Settings.Element1 = State
spawn(function()
while Settings.Element1 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element1")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element1",
            Text = "Current Element1 is " .. game:GetService("Players").LocalPlayer.statz.main.element1.Value
        }
    )
    wait(5)
end
end)
end)
local Toggle1 = Section3:CreateToggle("Auto Element Slot 2", Settings.Element11, function(State)
Settings.Element11 = State
spawn(function()
while Settings.Element11 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element2")

    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element2",
            Text = "Current Element2 is " .. game:GetService("Players").LocalPlayer.statz.main.element2.Value
        }
    )
    wait(5)
end
end)
end)

local Toggle1 = Section3:CreateToggle("Auto Element Slot 3", Settings.Element12, function(State)
Settings.Element12 = State
spawn(function()
while Settings.Element12 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element3")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element3",
            Text = "Current Element3 is " .. game:GetService("Players").LocalPlayer.statz.main.element3.Value
        }
    )
    wait(5)
end
end)

end)
local Toggle1 = Section3:CreateToggle("Auto Element Slot 4", Settings.Element14, function(State)
Settings.Element14 = State
spawn(function()
while Settings.Element14 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element4")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element4",
            Text = "Current Element4 is " .. game:GetService("Players").LocalPlayer.statz.main.element4.Value
        }
    )
    wait(5)
end
end)
end)

local Toggle1 = Section4:CreateToggle("Auto BloodLine Slot 1", Settings.Blood, function(State)
Settings.Blood = State
spawn(function()
while Settings.Blood do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg1")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine1",
            Text = "Current BloodLine1 is " .. game:GetService("Players").LocalPlayer.statz.main.kg1.Value
        }
    )
    wait(5)
end
end)
end)

local Toggle1 = Section4:CreateToggle("Auto BloodLine Slot 2", Settings.Blood1, function(State)
Settings.Blood1 = State
spawn(function()
while Settings.Blood1 do
    wait()

    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg2")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine2",
            Text = "Current BloodLine2 is " .. game:GetService("Players").LocalPlayer.statz.main.kg2.Value
        }
    )
    wait(5)
end
end)
end)

local Toggle1 = Section4:CreateToggle("Auto BloodLine Slot 3", Settings.Blood2, function(State)
Settings.Blood2 = State
spawn(function()
while Settings.Blood2 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg3")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine3",
            Text = "Current BloodLine3 is " .. game:GetService("Players").LocalPlayer.statz.main.kg3.Value
        }
    )
    wait(5)
end
end)
end)

local Toggle1 = Section4:CreateToggle("Auto BloodLine Slot 4", Settings.Blood3, function(State)
Settings.Blood3 = State
spawn(function()
while Settings.Blood3 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg4")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine4",
            Text = "Current BloodLine4 is " .. game:GetService("Players").LocalPlayer.statz.main.kg4.Value
        }
    )
    wait(5)
end
end)
end)
end -- where it stops

local Toggle1 = SectionA:CreateToggle("AutoKeyPress R", Settings.R, function(State)
Settings.R = State
spawn(function()
while Settings.R do
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"R",false,uwu)
end 
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress T", Settings.T, function(State)
Settings.T = State
spawn(function()
while Settings.T do
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"T",false,uwu)
end
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress Y", Settings.Y, function(State)
Settings.Y = State
spawn(function()
while Settings.Y do
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"Y",false,uwu)
end 
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress F", Settings.F, function(State)
Settings.F = State
spawn(function()
while Settings.F do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"F",false,uwu)
end
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress G", Settings.G, function(State)
Settings.G = State
spawn(function()
while Settings.G do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"G",false,uwu)
end
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress H", Settings.H, function(State)
Settings.H = State
spawn(function()
while Settings.H do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"H",false,uwu)
end
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress Q", Settings.Q, function(State)
Settings.Q = State
spawn(function()
while Settings.Q do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"Q",false,uwu)
end 
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress E", Settings.E, function(State)
Settings.E = State
spawn(function()
while Settings.E do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"E",false,uwu)
end 
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress V", Settings.V, function(State)
Settings.V = State
spawn(function()
while Settings.V do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"V",false,uwu)
end 
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress B", Settings.B, function(State)
Settings.B = State
spawn(function()
while Settings.B do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"B",false,uwu)
end 
end)
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress N", Settings.N, function(State)
Settings.N = State
spawn(function()
while Settings.N do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"N",false,uwu)
end 
end)
end)
local Toggle1 = Section7:CreateToggle("Enable WalkSpeed/JumpPower", Settings.Go, function(State)
Settings.Go = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Go then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = Settings.WalkSpeed
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").JumpPower = Settings.JumpPower
            if not game:GetService("UserInputService").WindowFocusReleased then
                setfpscap(Settings.Fps)
            end
        end
    end
)

end)

local TextBox1 = Section7:CreateTextBox("Fps Lock", "Only numbers", true, function(Value)
    Settings.Fps = Value
end)

local TextBox1 = Section7:CreateSlider("WalkSpeed",16,500 ,nil, true, function(Value)
    Settings.WalkSpeed = Value
end)
local TextBox1 = Section7:CreateSlider("JumpPower",16,500 ,nil, true, function(Value)
    Settings.JumpPower = Value
end)

local Toggle1 = Section7:CreateToggle("Infinite Jump", Settings.InfiniteJump, function(State)
Settings.InfiniteJump = State
game:GetService("UserInputService").JumpRequest:connect(
    function()
        if Settings.InfiniteJump then
            game:GetService "Players".LocalPlayer.Character:FindFirstChildOfClass "Humanoid":ChangeState("Jumping")
        end
    end
)
end)

local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()
local Toggle1 = Section7:CreateToggle("Enable Esp", Settings.Esp, function(State)
    Settings.Esp = State
    ESP:Toggle(Settings.Esp)
end)
local Toggle1 = Section7:CreateToggle("PLayer Esp", Settings.PlayerEsp, function(State)
    Settings.PlayerEsp = State
    ESP.Players = Settings.PlayerEsp
end)

local Toggle1 = Section7:CreateToggle("AutoServerHop", Settings.ServerHop, function(State)
Settings.ServerHop = State
spawn(function()
while Settings.ServerHop do wait(Settings.Seconds)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end 
end)
end)
local Button1 = Section7:CreateButton("Anti Lag", function()
for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end)

local Button1 = Section7:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = Section7:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)





local Toggle3 = Section5:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
local Colorpicker3 = Section5:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)

-- credits to jan for patterns
local Dropdown3 = Section6:CreateDropdown("Image", {"Default","Hearts","Abstract","Hexagon","Circles","Lace With Flowers","Floral"}, function(Name)
	if Name == "Default" then
		Window:SetBackground("2151741365")
	elseif Name == "Hearts" then
		Window:SetBackground("6073763717")
	elseif Name == "Abstract" then
		Window:SetBackground("6073743871")
	elseif Name == "Hexagon" then
		Window:SetBackground("6073628839")
	elseif Name == "Circles" then
		Window:SetBackground("6071579801")
	elseif Name == "Lace With Flowers" then
		Window:SetBackground("6071575925")
	elseif Name == "Floral" then
		Window:SetBackground("5553946656")
	end
end)
Dropdown3:SetOption("Hexagon")

local Colorpicker6 = Section6:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker6:UpdateColor(Color3.new(0,255,255))

local Slider3 = Section6:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section6:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)


spawn(function()
while wait() do
Save()
end end)
