if game:GetService("CoreGui"):FindFirstChild("BlackTrap") then
    game:GetService("CoreGui")["BlackTrap"]:Destroy()
end

local Name = "Roblox Arsenal.txt"

Des = {}
if makefolder then
    makefolder("Thunder Z")
end

local Settings

if
    not pcall(
        function()
            readfile("Thunder Z-" .. Name)
        end
    )
 then
    writefile("Thunder Z-" .. Name, game:service "HttpService":JSONEncode(Des))
end

Settings = game:service "HttpService":JSONDecode(readfile("Thunder Z-" .. Name))

local function Save()
    writefile("Thunder Z-" .. Name, game:service "HttpService":JSONEncode(Settings))
end


function getUserRole(i, v)
    return i:GetRoleInGroup(v)
end
game.Players.PlayerAdded:Connect(
    function(v)
        if
            getUserRole(v, 2613928) == "Game Moderators" or getUserRole(v, 2613928) == "Interns" or
                getUserRole(v, 2613928) == "Contractors" or
                getUserRole(v, 2613928) == "Contributors" or
                getUserRole(v, 2613928) == "Beloved" or
                getUserRole(v, 2613928) == "Main Developers" or
                getUserRole(v, 2613928) == "Founder/Main Developer"
         then
            local PlaceID = game.PlaceId
            local AllIDs = {}
            local foundAnything = ""
            local actualHour = os.date("!*t").hour
            local Deleted = false
            function TPReturner()
                local Site
                if foundAnything == "" then
                    Site =
                        game.HttpService:JSONDecode(
                        game:HttpGet(
                            "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
                        )
                    )
                else
                    Site =
                        game.HttpService:JSONDecode(
                        game:HttpGet(
                            "https://games.roblox.com/v1/games/" ..
                                PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
                        )
                    )
                end
                local ID = ""
                if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                    foundAnything = Site.nextPageCursor
                end
                local num = 0
                for i, v in pairs(Site.data) do
                    local Possible = true
                    ID = tostring(v.id)
                    if tonumber(v.maxPlayers) > tonumber(v.playing) then
                        for _, Existing in pairs(AllIDs) do
                            if num ~= 0 then
                                if ID == tostring(Existing) then
                                    Possible = false
                                end
                            else
                                if tonumber(actualHour) ~= tonumber(Existing) then
                                    local delFile =
                                        pcall(
                                        function()
                                            delfile("NotSameServers.json")
                                            AllIDs = {}
                                            table.insert(AllIDs, actualHour)
                                        end
                                    )
                                end
                            end
                            num = num + 1
                        end
                        if Possible == true then
                            table.insert(AllIDs, ID)
                            wait()
                            pcall(
                                function()
                                    writefile("NotSameServers.json", game:GetService("HttpService"):JSONEncode(AllIDs))
                                    wait()
                                    game:GetService("TeleportService"):TeleportToPlaceInstance(
                                        PlaceID,
                                        ID,
                                        game.Players.LocalPlayer
                                    )
                                end
                            )
                            wait(4)
                        end
                    end
                end
            end

            function Teleport()
                while wait() do
                    pcall(
                        function()
                            TPReturner()
                            if foundAnything ~= "" then
                                TPReturner()
                            end
                        end
                    )
                end
            end

            -- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
            Teleport() --CharWars
        end
    end
)

local OldNameCall
OldNameCall = hookmetamethod(game, "__newindex", function(A, B, ...)
    if not checkcaller()  and (B == "WalkSpeed") then
        return
    end
    return OldNameCall(A, B, ...)
end)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 23 
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 15

local Circle = Drawing.new("Circle")
Circle.Color = Color3.fromRGB(0,255,255)
Circle.Thickness = 1
Circle.Radius = 250
Circle.Visible = false 
Circle.NumSides = 1000
Circle.Filled = false
Circle.Transparency = 1

game:GetService("RunService").RenderStepped:Connect(
    function()
        local Mouse = game:GetService("UserInputService"):GetMouseLocation()
        Circle.Position = Vector2.new(Mouse.X, Mouse.Y)
    end
)

Settings.Aimbot = {
    FreeForAll = false,
    WallCheck = false,
    Enabled = false,
    FOV = 250
}
local Shoot = false

function FreeForAll(v)
    if Settings.Aimbot.FreeForAll == false or Settings.T.FreeForAll == false then
        if game.Players.LocalPlayer.Team == v.Team then
            return false
        else
            return true
        end
    else
        return true
    end
end

function NotObstructing(i, v)
    if Settings.Aimbot.WallCheck then
        c = workspace.CurrentCamera.CFrame.p
        a = Ray.new(c, i - c)
        f = workspace:FindPartOnRayWithIgnoreList(a, v)
        return f == nil
    else
        return true
    end
end
game:GetService("UserInputService").InputBegan:Connect(
    function(v)
        if v.UserInputType == Enum.UserInputType.MouseButton2 then
            Shoot = true
        end
    end
)

game:GetService("UserInputService").InputEnded:Connect(
    function(v)
        if v.UserInputType == Enum.UserInputType.MouseButton2 then
            Shoot = false
        end
    end
)

function GetClosestToCuror()
    Closest = math.huge
    Target = nil
    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if FreeForAll(v) then
            if
                v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and
                    v.Character:FindFirstChild("Humanoid") and
                    v.Character.Humanoid.Health ~= 0
             then
                Point, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                if
                    OnScreen and
                        NotObstructing(
                            v.Character.HumanoidRootPart.Position,
                            {game.Players.LocalPlayer.Character, v.Character}
                        )
                 then
                    Distance =
                        (Vector2.new(Point.X, Point.Y) -
                        Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y)).magnitude
                    if Distance <= Settings.Aimbot.FOV then
                        Closest = Distance
                        Target = v
                    end
                end
            end
        end
    end
    return Target
end

game:GetService("RunService").Stepped:connect(
    function()
        pcall(
            function()
                if Settings.Aimbot.Enabled == false or Shoot == false then
                    return
                end
                ClosestPlayer = GetClosestToCuror()
                if ClosestPlayer then
                    workspace.CurrentCamera.CFrame =
                        CFrame.new(workspace.CurrentCamera.CFrame.p, ClosestPlayer.Character[Settings.AimPart].CFrame.p)
                end
            end
        )
    end
)
Settings.T = {
    TeamCheck = false,
    Delay = 0.01,
    Enabled = false
}

local Aim = false
game:GetService("UserInputService").InputBegan:connect(
    function(v)
        if v.UserInputType == Enum.UserInputType.MouseButton2 and Settings.T.Enabled then
            Aim = true
            while Aim do
                wait()
                if
                    game:GetService("Players").LocalPlayer:GetMouse().Target and
                        game:GetService("Players"):FindFirstChild(
                            game:GetService("Players").LocalPlayer:GetMouse().Target.Parent.Name
                        )
                 then
                    local Person =
                        game:GetService("Players"):FindFirstChild(
                        game:GetService("Players").LocalPlayer:GetMouse().Target.Parent.Name
                    )
                    if Person.Team ~= game:GetService("Players").LocalPlayer.Team or not Settings.T.TeamCheck then
                        if Settings.T.Delay > 0 then
                            wait(0.01)
                        end
                        mouse1press()
                        wait()
                        mouse1release()
                    end
                end
                if not Settings.T.Enabled then
                    break
                end
            end
        end
    end
)

game:GetService("UserInputService").InputEnded:connect(
    function(v)
        if v.KeyCode == Enum.UserInputType.MouseButton2 and Settings.T.Enabled then
            Aim = false
        end
    end
)

local Blacklib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Pepekx/QwontolFY/main/UI%20KONTOL"))()

local Win = Blacklib:Window()

local FirstPages = Win:Tab("• Main","rbxassetid://4483345998")
local SecondPages = Win:Tab("• ESP", "http://www.roblox.com/asset/?id=9255173607")
local FirstPage = FirstPages:NewSection("// Aimbot Section //")

FirstPage:AddDropdown("• Hit Body Target •",{"Head","Body","Legs","Random"}, function(value) 
Settings.AimPart = value
if Settings.AimPart == nil then
Settings.AimPart = "Body"
end 
end)

FirstPage:AddLine()
FirstPage:AddToggle("• Enable Aimbot •" , Settings.Aimbot.Enabled , function(value)
    Settings.Aimbot.Enabled = value
end)
FirstPage:AddToggle("• No Recoil •", Settings.Recoil, function(value)
Settings.Recoil = value
for i, v in pairs(game:GetService("ReplicatedStorage").Weapons:GetDescendants()) do
    if v.Name == "MaxSpread" or v.Name == "Spread" or v.Name == "RecoilControl" then
        if Settings.Recoil then
            v.Value = 0
        else
            v.Value = 1
        end
    end
end
end)

FirstPage:AddToggle("• Fast Fire Rate •", Settings.FireRate, function(value)
Settings.FireRate = value
for _, v in pairs(game.ReplicatedStorage.Weapons:GetDescendants()) do
    if v.Name == "FireRate" then
        if Settings.FireRate then
            v.Value = 0.02 -- Fast Firerate
        else
            v.Value = 0.8
        end
    end
end
end)

FirstPage:AddLabel("// Aimbot Setting //")
FirstPage:AddToggle("• Silent Aim •" , Settings.SilentAim , function(value)
    Settings.SilentAim = value
    local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
function ClosestPlayerToCurser()
    local MaxDistance, Closest = math.huge
    for i,v in pairs(Players.GetPlayers(Players)) do
        if v ~= LocalPlayer and v.Team ~= LocalPlayer.Team and v.Character then
            local H = v.Character.FindFirstChild(v.Character, "Head")
            if H then 
                local Pos, Vis = workspace.CurrentCamera.WorldToScreenPoint(workspace.CurrentCamera, H.Position)
                if Vis then
                    local A1, A2 = Vector2.new(Mouse.X, Mouse.Y), Vector2.new(Pos.X, Pos.Y)
                    local Dist = (A2 - A1).Magnitude
                    if Dist < MaxDistance and Dist <= 2500 then
                        MaxDistance = Dist
                        Closest = v
                    end
                end
            end
        end
    end
    return Closest
end
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(self,...)
    local Args = {...}
    if getnamecallmethod() == "FindPartOnRayWithIgnoreList" and not checkcaller() and Settings.SilentAim then
        local GivemeHead = ClosestPlayerToCurser()
        if GivemeHead and GivemeHead.Character and GivemeHead.Character.FindFirstChild(GivemeHead.Character, Settings.AimPart) then
            Args[1] = Ray.new(workspace.CurrentCamera.CFrame.Position, (GivemeHead.Character[Settings.AimPart].Position - workspace.CurrentCamera.CFrame.Position).Unit * 1000)
            return OldNameCall(self, unpack(Args))
        end
    end
    return OldNameCall(self, ...)
end)
end)

FirstPage:AddToggle("• Trigger Bot •", Settings.T.Enabled , function(value)
    Settings.T.Enabled = value
end)

--FirstPage:AddToggle("• Circle Fov Visible •" , Circle.Visible , function(value)
   -- Circle.Visible = value
--end)

--FirstPage:AddSlider("• Fov Radius •" , 0,500,250,Settings.Aimbot.FOV ,false,function(value)
    --Settings.Aimbot.FOV = Circle.Radius 
--    Settings.Aimbot.FOV = Value
--end)

local SecondPage = SecondPages:NewSection("// ESP //")
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Pepekx/QwontolFY/main/Esp-Karrot"))()

SecondPage:AddToggle("• Enable ESP •", Settings.Esp, function(value)
    Settings.Esp = value
    ESP:Toggle(Settings.Esp)
end)
SecondPage:AddLine()
SecondPage:AddToggle("• Player - ESP •", Settings.PlayerEsp, function(value)
    Settings.PlayerEsp = value
    ESP.Players = Settings.PlayerEsp
end)

SecondPage:AddToggle("• Boxes - ESP •", Settings.Boxes, function(value)
    Settings.Boxes = value
    ESP.Boxes = Settings.Boxes
end)

SecondPage:AddToggle("• Name - ESP •", Settings.EspNames, function(value)
    ESP.Names = Settings.EspNames
    Settings.EspNames = value
end)

SecondPage:AddToggle("• Line - ESP •", Settings.Tracers, function(value)
    Settings.Tracers = value
    ESP.Tracers = Settings.Tracers
end)
