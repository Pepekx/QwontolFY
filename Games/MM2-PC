local Config = {
    WindowName = "Fikury HUB | Murder Mystery 2",
	Color = Color3.fromRGB(0,255,255),
	Keybind = Enum.KeyCode.RightControl
}

repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
pcall(function()
game:GetService("ReplicatedStorage").IsXbox:FireServer()
for i,v in pairs(Workspace:GetChildren()) do
  if v:IsA("Part") and  v.Name ~= "Part" then
    v.CanCollide =false
  end
end end)
spawn(function()
game:GetService("RunService").RenderStepped:Connect(function()
for i,v in pairs(game:GetService("ReplicatedStorage").GetPlayerData:InvokeServer()) do
    if v.Role == "Murderer" then
         getgenv().Murder = i -- Murder
    end
end
for i,v in pairs(game:GetService("ReplicatedStorage").GetPlayerData:InvokeServer()) do
    if v.Role == "Sheriff" then
         getgenv().Sheriff = i -- Sheriff
    end
end
     end)
end)
local Player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local CoinTarget = nil
local AutoFarming

local accessories = {}
function GodModeFunc()
	if Player.Character then
		if Player.Character:FindFirstChild("Humanoid") then
			for _, accessory in pairs(Player.Character.Humanoid:GetAccessories()) do 
				table.insert(accessories, accessory:Clone())
			end
			Player.Character.Humanoid.Name = "1"
		end
		local l = Player.Character["1"]:Clone()
		l.Parent = Player.Character
		l.Name = "Humanoid"; wait(0.1)
		Player.Character["1"]:Destroy()
		workspace.CurrentCamera.CameraSubject = Player.Character.Humanoid
		for _, accessory in pairs(accessories) do 
			Player.Character.Humanoid:AddAccessory(accessory)
		end
		Player.Character.Animate.Disabled = true
		wait(0.1)
		Player.Character.Animate.Disabled = false
		--Tag:
		local Tag = Instance.new("BoolValue", Player.Character)
		Tag.Name = "GodMode"
		Tag.Value = true
		spawn(function()
			local Jumping = false
			local Died = false
			Player.Character.Humanoid.Died:connect(function()
				Died = true
			end)
			UIS.InputBegan:connect(function(i, process)
				if  not process and not Died then
					Jumping = false
					spawn(function()
						repeat
						
							game:GetService("RunService").RenderStepped:Wait()
						until not Jumping or Died
					end)
				else
					repeat
						
						game:GetService("RunService").RenderStepped:Wait()
					until not Jumping
				end
			end)
			UIS.InputEnded:connect(function(i, process)
				if  not process and not Died then
					Jumping = false
				end
			end)
		end)
	end
end

local UIS = game:GetService("UserInputService")
local CoinTarget = nil
local AutoFarming

function GetClosestCoin()
    local TargetDistance = 100
    local Target
    for i, v in pairs(workspace:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChild("CoinContainer") then
            for i, v in pairs(v.CoinContainer:GetChildren()) do
                if v.Name == "Coin_Server" and v.Name ~= "CollectedCoin" then
                    local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
                    if mag < TargetDistance then
                        TargetDistance = mag
                        CoinTarget = v
                    end
                end
            end
        end
    end
end





spawn(function()
	while wait() do
		pcall(function()
			if getgenv().Coin and not AutoFarming and game.Players.LocalPlayer.PlayerGui.MainGUI.Game.CashBag.Visible and not game.Players.LocalPlayer.PlayerGui.MainGUI.Game.CashBag.Full.Visible and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
				AutoFarming = true
				if getgenv().GodMode and not game.Players.LocalPlayer.Character:FindFirstChild("GodMode") then
					GodModeFunc()
				end
				GetClosestCoin()
				if CoinTarget ~= nil then
					spawn(function()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(CoinTarget.Position.X,CoinTarget.Position.Y + 1.5,CoinTarget.Position.Z) wait()
				firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, CoinTarget, 0)
				firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, CoinTarget, 1)
				end)
				end
				wait(2)
				CoinTarget = nil
				AutoFarming = false
			end
		end)
	end
	
end)

game:GetService('RunService').Stepped:connect(function()
if getgenv().Coin then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end)
end
end)

function people(model)
if game:GetService("Players")[model.Name].Backpack:FindFirstChild("Knife") or game.Workspace[model.Name]:FindFirstChild("Knife") then return  Murder.Name end
if game:GetService("Players")[model.Name].Backpack:FindFirstChild("Gun") or game:GetService("Players")[model.Name].Backpack:FindFirstChild("Revolver") or game.Workspace[model.Name]:FindFirstChild("Revolver") or game.Workspace[model.Name]:FindFirstChild("Gun") then return CowBoy.Name end
return Color3.fromRGB(0, 255, 0)
end
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/im-retarded-3"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Main")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section2 = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

local Toggle1 = Section1:CreateToggle("AutoFarm", nil, function(State)
getgenv().Coin = State

end)
local Toggle1 = Section1:CreateToggle("GodMode AutoFarm", nil, function(State)
getgenv().Coin = State
getgenv().GodMode = State
end)
local Toggle1 = Section1:CreateToggle("Auto Invis", nil, function(State)
sex = State
local Player = game.Players.LocalPlayer
local savepos = Player.Character.HumanoidRootPart.CFrame

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-85.1800766, 137.657455, -58.091156)
wait(0.5)
local Character = game:GetService('Players').LocalPlayer.Character
local Clone = Character.LowerTorso.Root:Clone()
Character.LowerTorso.Root:Destroy()
Clone.Parent = Character.LowerTorso
wait(0.5)

Player.Character.HumanoidRootPart.CFrame = savepos 
game.Players.LocalPlayer.CharacterAdded:Connect(function()
wait(3)
if sex then
local Player = game.Players.LocalPlayer
local savepos = Player.Character.HumanoidRootPart.CFrame

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-85.1800766, 137.657455, -58.091156)
wait(0.5)
local Character = game:GetService('Players').LocalPlayer.Character
local Clone = Character.LowerTorso.Root:Clone()
Character.LowerTorso.Root:Destroy()
Clone.Parent = Character.LowerTorso
wait(0.5)

Player.Character.HumanoidRootPart.CFrame = savepos 
end end) end)
local Button1 = Section1:CreateButton("Lag Server", function()
    

while wait() do -- this method is all thanks to felix 
game:GetService("ReplicatedStorage").Equip:FireServer("DefaultKnife","Weapons")
game:GetService("ReplicatedStorage").Equip:FireServer("Xbox","Weapons")
end end)
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()
ESP.Overrides.GetColor = function(model)
    if game:GetService("Players")[model.Name].Backpack:FindFirstChild("Knife") or game.Workspace[model.Name]:FindFirstChild("Knife") then return Color3.fromRGB(255,0,0) end -- yes i use it deal with it i like this method
    if game:GetService("Players")[model.Name].Backpack:FindFirstChild("Gun") or game:GetService("Players")[model.Name].Backpack:FindFirstChild("Revolver") or game.Workspace[model.Name]:FindFirstChild("Revolver") or game.Workspace[model.Name]:FindFirstChild("Gun") then return Color3.fromRGB(0,0,255) end
    return Color3.fromRGB(0, 255, 0)
end
local Button1 = Section1:CreateButton("GodMode", function()
GodModeFunc()
end)
local Toggle1 = Section1:CreateToggle("Esp", nil, function(State)
ESP:Toggle(State)
ESP.Tracers = State
ESP.Names = State
ESP.Boxes = State
end)


local Button1 = Section1:CreateButton("Floss", function()
game:GetService("ReplicatedStorage").PlayEmote:Fire("floss")
end)

local Button1 = Section1:CreateButton("Zen", function()
game:GetService("ReplicatedStorage").PlayEmote:Fire("zen")
end)

local Button1 = Section1:CreateButton("Sit", function()
game:GetService("ReplicatedStorage").PlayEmote:Fire("sit")
end)

local Button1 = Section1:CreateButton("Dab", function()
game:GetService("ReplicatedStorage").PlayEmote:Fire("dab")
end)
local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local Toggle1 = Section2:CreateToggle("Infinite Jump", nil, function(State)
Infinite = State
game:GetService("UserInputService").JumpRequest:connect(function()
	if Infinite then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end) end)


local Toggle1 = Section2:CreateToggle("G Noclip", nil, function(State)
sex = State
noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "g" then
if sex then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end 
end) end)

local Toggle1 = Section2:CreateToggle("B Fly", nil, function(State)
sex2 = State
local Max = 0
local Players = game.Players
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(function(k)
if k:lower() == 'b' then
Max = Max + 1
getgenv().Fly = false
if sex2 then
local T = LP.Character.UpperTorso
local S = {
F = 0,
B = 0,
L = 0,
R = 0
}
local S2 = {
F = 0,
B = 0,
L = 0,
R = 0
}
local SPEED = 5
local function FLY()
getgenv().Fly = true
local BodyGyro = Instance.new('BodyGyro', T)
local BodyVelocity = Instance.new('BodyVelocity', T)
BodyGyro.P = 9e4
BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
BodyGyro.cframe = T.CFrame
BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
spawn(function()
repeat
wait()
LP.Character.Humanoid.PlatformStand = false
if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
SPEED = 200
elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
SPEED = 0
end
if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
BodyVelocity.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
S2 = {
F = S.F,
B = S.B,
L = S.L,
R = S.R
}
elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
BodyVelocity.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
end
BodyGyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame
until not getgenv().Fly
S = {
F = 0,
B = 0,
L = 0,
R = 0
}
S2 = {
F = 0,
B = 0,
L = 0,
R = 0
}
SPEED = 0
BodyGyro:destroy()
BodyVelocity:destroy()
LP.Character.Humanoid.PlatformStand = false
end)
end
Mouse.KeyDown:connect(function(k)
if k:lower() == 'w' then
S.F = 1
elseif k:lower() == 's' then
S.B = -1
elseif k:lower() == 'a' then
S.L = -1
elseif k:lower() == 'd' then
S.R = 1
end
end)
Mouse.KeyUp:connect(function(k)
if k:lower() == 'w' then
S.F = 0
elseif k:lower() == 's' then
S.B = 0
elseif k:lower() == 'a' then
S.L = 0
elseif k:lower() == 'd' then
S.R = 0
end
end)
FLY()
if Max == 2 then
getgenv().Fly = false
Max = 0
end
end
end
end)
end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then --- i stole this from the actual game LOL >-<
v.Material = Enum.Material.SmoothPlastic;
if v:IsA("Texture") then
v:Destroy();
end end;		
end;
end)
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
local Option8 = Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
local Option9 = Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
local Option10 = Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
local Option11 = Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
local Option12 = Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
local Option13 = Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option10:SetOption()

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(0,255,255))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
